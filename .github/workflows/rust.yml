name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-std:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Build
        run: cargo build --features debug-assertions
      - name: Run tests
        run: cargo test --features debug-assertions
      - name: Build dylib-tests
        run: cargo build -p dylib-tests --features debug-assertions
      - name: Run dylib-tests
        run: cargo test -p dylib-tests --features debug-assertions
  build-miri:
    name: Miri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri
      - name: Build
        run: cargo +nightly miri test --features debug-assertions
  wasm:
    name: WASM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Test stringleton-registry (Chrome)
        run: cd stringleton-registry && wasm-pack test --headless --chrome --features debug-assertions && cd ..
      - name: Test stringleton (Chrome)
        run: cd stringleton && wasm-pack test --headless --chrome --features debug-assertions && cd ..
      - name: Test stringleton-registry (Firefox)
        run: cd stringleton-registry && wasm-pack test --headless --firefox --features debug-assertions && cd ..
      - name: Test stringleton (Firefox)
        run: cd stringleton && wasm-pack test --headless --firefox --features debug-assertions && cd ..
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: cargo clippy
      run: cargo clippy --all-features -- -D warnings
  fmt:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: cargo fmt --check
      run: cargo fmt -- --check --color=always
